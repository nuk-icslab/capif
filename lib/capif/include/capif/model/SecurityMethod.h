/**
 * CAPIF_Discover_Service_API
 * API for discovering service APIs. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SecurityMethod.h
 *
 * Possible values are - PSK: Security method 1 (Using TLS-PSK) as described in
 * 3GPP TS 33.122 - PKI: Security method 2 (Using PKI) as described in 3GPP
 * TS 33.122 - OAUTH: Security method 3 (TLS with OAuth token) as described in
 * 3GPP TS 33.122
 */

#ifndef SecurityMethod_H_
#define SecurityMethod_H_

#include <nlohmann/json.hpp>

#include "capif/model/SecurityMethod_anyOf.h"

namespace org::openapitools::server::model {

/// <summary>
/// Possible values are - PSK: Security method 1 (Using TLS-PSK) as described in
/// 3GPP TS 33.122 - PKI: Security method 2 (Using PKI) as described in 3GPP
/// TS 33.122 - OAUTH: Security method 3 (TLS with OAuth token) as described in
/// 3GPP TS 33.122
/// </summary>
class SecurityMethod {
 public:
  SecurityMethod();
  virtual ~SecurityMethod() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const SecurityMethod& rhs) const;
  bool operator!=(const SecurityMethod& rhs) const;

  /////////////////////////////////////////////
  /// SecurityMethod members

  SecurityMethod_anyOf getValue() const;
  void setValue(SecurityMethod_anyOf value);
  SecurityMethod_anyOf::eSecurityMethod_anyOf getEnumValue() const;
  void setEnumValue(SecurityMethod_anyOf::eSecurityMethod_anyOf value);
  friend void to_json(nlohmann::json& j, const SecurityMethod& o);
  friend void from_json(const nlohmann::json& j, SecurityMethod& o);
  friend void to_json(nlohmann::json& j, const SecurityMethod_anyOf& o);
  friend void from_json(const nlohmann::json& j, SecurityMethod_anyOf& o);

 protected:
  SecurityMethod_anyOf m_value;
};

}  // namespace org::openapitools::server::model

#endif /* SecurityMethod_H_ */
