/**
 * CAPIF_Publish_Service_API
 * API for publishing service APIs. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * DefaultApiImpl.h
 *
 *
 */

#ifndef DEFAULT_API_IMPL_H_
#define DEFAULT_API_IMPL_H_

#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <memory>
#include <string>

#include "openapi/api/DefaultApi.h"
#include "openapi/model/ProblemDetails.h"
#include "openapi/model/ServiceAPIDescription.h"

namespace org::openapitools::server::api {

using namespace org::openapitools::server::model;

class DefaultApiImpl : public org::openapitools::server::api::DefaultApi {
 public:
  explicit DefaultApiImpl(const std::shared_ptr<Pistache::Rest::Router> &rtr);
  ~DefaultApiImpl() override = default;

  void apf_id_service_apis_get(const std::string &apfId,
                               Pistache::Http::ResponseWriter &response);
  void apf_id_service_apis_post(
      const std::string &apfId,
      const ServiceAPIDescription &serviceAPIDescription,
      Pistache::Http::ResponseWriter &response);
  void apf_id_service_apis_service_api_id_delete(
      const std::string &serviceApiId, const std::string &apfId,
      Pistache::Http::ResponseWriter &response);
  void apf_id_service_apis_service_api_id_get(
      const std::string &serviceApiId, const std::string &apfId,
      Pistache::Http::ResponseWriter &response);
  void apf_id_service_apis_service_api_id_put(
      const std::string &serviceApiId, const std::string &apfId,
      const ServiceAPIDescription &serviceAPIDescription,
      Pistache::Http::ResponseWriter &response);
};

}  // namespace org::openapitools::server::api

#endif
